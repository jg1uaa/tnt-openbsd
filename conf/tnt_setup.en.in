#! /bin/sh
#
# Configuration Script for TNT
#
# Script-Version: 1.3/english
# TNT-Version: 1.9
#
# Created: 10.03.1999 by Berndt Josef Wulf - wulf@ping.net.au
# Updated: 25.04.1999 by Matthias Hensler - wsp@gmx.de
# Updated: 28.03.1999 by Berndt Josef Wulf - wulf@ping.net.au
# Updated: 23.05.1999 by Matthias Hensler - wsp@gmx.de
#
# Most parts of TNT_SETUP were copied from the original
# INSTALL script written by Matthias Hensler - wsp@gmx.de
#
#
# Globals

tnt_main_dir=@tnt_main_dir@
tnt_work_dir=@tnt_work_dir@
tnt_conf_dir=@tnt_conf_dir@
tnt_doc_dir=@tnt_doc_dir@
tnt_log_dir=@tnt_log_dir@
tnt_bin_dir=@tnt_bin_dir@

CWAX25=@cwax25@                # Menu for ax25-support?
AX25PO=P3               # AX25 Port
AX25FM=0                # AX25 Fullmoniflag
SOUNDON=@cwsound@	# Compiled with Sound?
NEWUSER=@gennewuser@    # Compiled with newuser generation?
@cfg@

LOCKFILE=$DEF_LCK_STR$DEF_ADD_STR

show_docs()
{
  while [ 1 ] ; do
    dialog --title "Show documenation" \
           --backtitle "Select" \
           --menu "What do you want to know?" 10 60 4 \
           DOC "Documentation about TNT" \
           CHANGES "Changes" \
           COPYING "Copyrightinformations" \
           INFO "Infos about TNT-Setup" \
           2>/tmp/$$
    if [ ! $? = 0 ] ; then
      return
    fi
    read WHICH < /tmp/$$
    case "$WHICH" in
      DOC) dialog --title "TNT-Documentation" \
                  --backtitle "Read..." \
                  --textbox ${tnt_doc_dir}/tnt.doc 24 80;;
      CHANGES) dialog --title "TNT-Changes" \
                      --backtitle "Read..." \
                      --textbox ${tnt_doc_dir}/CHANGES 24 80;;
      COPYING) dialog --title "Copyrightinformations" \
                      --backtitle "Read..." \
                      --textbox ${tnt_doc_dir}/COPYING 24 80;;
      INFO) dialog --title "Info" \
                   --backtitle "Read..." \
                   --msgbox "TNT-Setup V1.1\nWritten by Matthias Hensler\nCopyright WSPse 1998/99\neMail: wsp@gmx.de\n\nLicenced under GPL\n" 11 35;;
    esac
  done
}
sel_baud_rate()
{
  dialog --title "Select baudrate" \
         --menu "Default: $BAUD" 13 40 6 \
         1200 "Baud" \
         2400 "Baud" \
         4800 "Baud" \
         9600 "Baud" \
         19200 "Baud" \
         38400 "Baud" \
         2>/tmp/$$
  if [ $? = 0 ] ; then
    read BAUD < /tmp/$$
  fi
}

sel_color()
{
  dialog --title "Colorsettings" \
         --menu "Default: $COLOR" 11 60 4 \
         0 "Monochrom" \
         1 "Color if terminaltyp = Linux" \
         2 "Color" \
         3 "Color if terminaltyp = Xterm" \
         2>/tmp/$$
  if [ $? = 0 ] ; then
    read COLOR < /tmp/$$
  fi
}

global_menu()
{
  while [ 1 ] ; do
    BFRONT=$BOXFRONT
    if [ "$BOXFRONT" = "0" ] ; then
      BFRONT="deactivated"
    fi
    dialog --title "Globale settings" \
           --backtitle "Select..." \
           --menu "Select:" 15 80 8 \
           MAIN "Mainpath: ${tnt_main_dir}" \
           LOCK "Lockfile: $LOCKFILE" \
           TNTC "Frontend: $FRONTEND" \
           BOX "Boxsocket: $BFRONT" \
           COOKIE "Cookiefile: $COOKIE" \
           MENU "Back to mainmenu" \
           HELP "A little help" \
           2>/tmp/$$
    if [ ! $? = 0 ] ; then
      return
    fi
    read WHICH < /tmp/$$
    case "$WHICH" in
      HELP) dialog --textbox ${tnt_doc_dir}/Readme1.en 24 80;;
      MENU) return;;
      MAIN) dialog --inputbox "Mainpath from TNT" 8 80 "${tnt_main_dir}" 2>/tmp/$$
            if [ $? = 0 ] ; then
              read tnt_main_dir < /tmp/$$
            fi;;
      LOCK) dialog --inputbox "Lockfile for TNT (without Device)" 8 80 "$DEF_LCK_STR" 2>/tmp/$$
            if [ $? = 0 ] ; then
              read DEF_LCK_STR < /tmp/$$
              LOCKFILE=$DEF_LCK_STR$DEF_ADD_STR
            fi
            if [ ! "$SOFTTNC" = "0" ] ; then
              dialog --inputbox "String appended to lockfile" 8 80 "$DEF_ADD_STR" 2>/tmp/$$
              if [ $? = 0 ] ; then
                read DEF_ADD_STR < /tmp/$$
                LOCKFILE=$DEF_LCK_STR$DEF_ADD_STR
              fi
            fi;;
      TNTC) dialog --inputbox "Frontendsocket for TNT-console" \
            8 80 "$FRONTEND" 2>/tmp/$$
            if [ $? = 0 ] ; then
              read FRONTEND < /tmp/$$
            fi;;
      BOX) dialog --inputbox "Socket of mailbox (if exists, else use \"0\")" \
           8 80 "$BOXFRONT" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read BOXFRONT < /tmp/$$
           fi;;
      COOKIE) dialog --inputbox "Cookiefile (eg from fortunepackage)" \
              8 80 "$COOKIE" 2>/tmp/$$
              if [ $? = 0 ] ; then
                read COOKIE < /tmp/$$
              fi;;
    esac
  done
}

sel_ax25()
{
  while [ 1 ] ; do
    dialog --title "AX25-Support" \
           --backtitle "Select..." \
           --menu "Select" 11 75 4 \
           PORT "AX25 port: $AX25PO" \
           MONI "Fullmoniflag: $AX25FM" \
           MENU "Back to mainmenu" \
           HELP "A little help" \
           2>/tmp/$$
    if [ ! $? = 0 ] ; then
      return
    fi
    read WHICH < /tmp/$$
    case "$WHICH" in
      HELP) dialog --textbox ${tnt_doc_dir}/Readme6.en 25 80;;
      MENU) return;;
      PORT) dialog --inputbox "AX25 port" 8 80 \
            "$AX25PO" 2>/tmp/$$
            if [ $? = 0 ] ; then
              read AX25PO < /tmp/$$
            fi;;
      MONI) if [ "$AX25FM" = "0" ] ; then
              AX25FM=1
            else
              AX25FM=0
            fi;;
    esac
  done
}

sel_tnc_type()
{
  dialog --title "TNC-Typ" \
         --backtitle "Select..." \
         --menu "Select:" 10 60 3 \
         TYP0 "Real TNC on serialport" \
         TYP1 "TFKISS on Unix-socket" \
         TYP2 "TFKISS on network-socket" \
         2>/tmp/$$
  if [ ! $? = 0 ] ; then
    return
  fi
  read WHICH < /tmp/$$
  case "$WHICH" in
    TYP0) SOFTTNC=0
          DEF_ADD_STR=DEV_STR1
          LOCKFILE=$DEF_LCK_STR$DEF_ADD_STR
          DEVICE=$DEFTYP0;;
    TYP1) SOFTTNC=1
          DEF_ADD_STR="stnc-sock"
          LOCKFILE=$DEF_LCK_STR$DEF_ADD_STR
          DEVICE=$DEFTYP1;;
    TYP2) SOFTTNC=2
          DEF_ADD_STR="stnc-netw"
          LOCKFILE=$DEF_LCK_STR$DEF_ADD_STR
          DEVICE=$DEFTYP2;;
  esac
}

sel_tnc_device()
{
  if [ "$SOFTTNC" = "0" ] ; then
    dialog --title "TNC-interface" \
           --backtitle "Select..." \
           --menu "Select:" 11 70 4 \
           COM1 "1st interface ($DEVICE1)" \
           COM2 "2nd interface ($DEVICE2)" \
           COM3 "3rd interface ($DEVICE3)" \
           COM4 "4th interface ($DEVICE4)" \
           2>/tmp/$$
    if [ ! $? = 0 ] ; then
      return
    fi
    read WHICH < /tmp/$$
    case "$WHICH" in
      COM1) DEVICE=$DEVICE1
            DEF_ADD_STR=$DEV_STR1;;
      COM2) DEVICE=$DEVICE2
            DEF_ADD_STR=$DEV_STR2;;
      COM3) DEVICE=$DEVICE3
            DEF_ADD_STR=$DEV_STR3;;
      COM4) DEVICE=$DEVICE4
            DEF_ADD_STR=$DEV_STR4;;
    esac
    LOCKFILE=$DEF_LCK_STR$DEF_ADD_STR
    return
  fi
  dialog --inputbox "Socket for TNC" 8 80 "$DEVICE" 2>/tmp/$$
  if [ $? = 0 ] ; then
    read DEVICE < /tmp/$$
  fi
}

tnc_menu()
{
  while [ 1 ] ; do
    case "$SOFTTNC" in
      0) TYPDES="real TNC";;
      1) TYPDES="TFKISS on Unix-socket";;
      2) TYPDES="TFKISS on network-socket";;
    esac
    dialog --title "TNC settings" \
           --backtitle "Select..." \
           --menu "Select:" 13 70 6 \
           TYP "TNC-Typ: $SOFTTNC ($TYPDES)" \
           BAUD "Baud-rate (only for real TNC (Typ 0): $BAUD" \
           DEVICE "TNC-device/interface: $DEVICE" \
           CHAN "Number of TNC-channels: $TNCCHAN" \
           MENU "Back to mainmenu" \
           HELP "A little help" \
           2>/tmp/$$
    if [ ! $? = 0 ] ; then
      return
    fi
    read WHICH < /tmp/$$
    case "$WHICH" in
      HELP) dialog --textbox ${tnt_doc_dir}/Readme2.en 24 80;;
      MENU) return;;
      BAUD) sel_baud_rate;;
      CHAN) dialog --inputbox "Number of TNC-channels (default: 10)" \
            8 80 "$TNCCHAN" 2>/tmp/$$
            if [ $? = 0 ] ; then
              read TNCCHAN < /tmp/$$
            fi;;
      TYP) sel_tnc_type;;
      DEVICE) sel_tnc_device;;
    esac
  done
}

scroll_menu()
{
  while [ 1 ] ; do
    dialog --title "Backscroll settings" \
           --backtitle "Select..." \
           --menu "Select:" 18 70 11 \
           RED "1st channel with reduced buffers: $TNCREDBUF" \
           MH "Number of entrys in MH-List: $HEARTENTRY" \
           MONITOR "Number of monitorlines: $LINES_MONITOR" \
           INPUT "Number of lines on inputscreen: $LINES_INPUT" \
           OUTPUT "Number of lines on receivescreen: $LINES_OUTPUT" \
           R_IN "Lines on inputscreen (reduced): $LINES_R_INPUT" \
           R_OUT "Lines on receivescreen (reduced): $LINES_R_OUTPUT" \
           BOX "Number of outputlines in mailbox-section: $LINES_BOXOUT" \
           MON "Number of monitorlines on connectscreen: $MON_LINES" \
           MENU "Back to mainmenu" \
           HELP "A little help" \
           2>/tmp/$$
    if [ ! $? = 0 ] ; then
      return
    fi
    read WHICH < /tmp/$$
    case "$WHICH" in
      HELP) dialog --textbox ${tnt_doc_dir}/Readme3.en 24 80;;
      MENU) return;;
      RED) dialog --inputbox "First channel with reduced backscrollbuffers" 8 80 "$TNCREDBUF" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read TNCREDBUF < /tmp/$$
           fi;;
      MH) dialog --inputbox "Number of entrys in heard-list" 8 80 "$HEARTENTRY" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read HEARTENTRY < /tmp/$$
           fi;;
      MONITOR) dialog --inputbox "Number of monitorlines" 8 80 "$LINES_MONITOR" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read LINES_MONITOR < /tmp/$$
           fi;;
      INPUT) dialog --inputbox "Number of lines on inputscreen" 8 80 "$LINES_INPUT" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read LINES_INPUT < /tmp/$$
           fi;;
      OUTPUT) dialog --inputbox "Number of lines on receivescreen" 8 80 "$LINES_OUTPUT" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read LINES_OUTPUT < /tmp/$$
           fi;;
      R_IN) dialog --inputbox "Number of inputlines on channels with reduced buffers" 8 80 "$LINES_R_INPUT" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read LINES_R_INPUT < /tmp/$$
           fi;;
      R_OUT) dialog --inputbox "Number of outputlines on channels with reduced buffers" 8 80 "$LINES_R_OUTPUT" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read LINES_R_OUTPUT < /tmp/$$
           fi;;
      BOX) dialog --inputbox "Number of outputlines in mailboxsection" 8 80 "$LINES_BOXOUT" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read LINES_BOXOUT < /tmp/$$
           fi;;
      MON) dialog --inputbox "Number of monitorlines on connectscreen" 8 80 "$MON_LINES" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read MON_LINES < /tmp/$$
           fi;;
    esac
  done
}

term_menu()
{
  while [ 1 ] ; do
    case "$COLOR" in
      0) COLDEF="monochrom";;
      1) COLDEF="Termcap [LINUX]";;
      2) COLDEF="Color";;
      3) COLDEF="Termcap [XTERM]";;
    esac
    if [ "$ENABLE_RESY" = "#" ] ; then
      RESY="No"
    else
      RESY="Yes"
    fi
    dialog --title "Global settings" \
           --backtitle "Select..." \
           --menu "Select:" 14 55 7 \
           CALL "Your callsign: $TERMCALL" \
           BOX "Your mailboxcallsign: $BOXCALL" \
           COLOR "Colorsettings: $COLOR ($COLDEF)" \
           STAT "Type of statusline: $ALTSTAT" \
           RESY "Resynclogfile: $RESY" \
           MENU "Back to mainmenu" \
           HELP "A little help" \
           2>/tmp/$$
    if [ ! $? = 0 ] ; then
      return
    fi
    read WHICH < /tmp/$$
    case "$WHICH" in
      HELP) dialog --textbox ${tnt_doc_dir}/Readme4.en 24 80;;
      MENU) return;;
      CALL) dialog --inputbox "Terminal-callsign" 8 40 "$TERMCALL" 2>/tmp/$$
            if [ $? = 0 ] ; then
              read TERMCALL < /tmp/$$
            fi;;
      BOX) dialog --inputbox "Box-callsign" 8 40 "$BOXCALL" 2>/tmp/$$
           if [ $? = 0 ] ; then
             read BOXCALL < /tmp/$$
           fi;;
      COLOR) sel_color;;
      STAT) dialog --menu "Statusline" 9 40 2 \
                   TYP1 "Old-fashioned statusline" \
                   TYP2 "Informative statusline" 2>/tmp/$$
            if [ $? = 0 ] ; then
              read WHICH < /tmp/$$
              if [ "$WHICH" = "TYP1" ] ; then
                ALTSTAT=0
              else
                ALTSTAT=1
              fi
            fi;;
      RESY) dialog --menu "Resync-logfile" 9 40 2 \
                   ON "Enable logfile" \
                   OFF "Disable logfile" 2>/tmp/$$
            if [ $? = 0 ] ; then
              read WHICH < /tmp/$$
              if [ "$WHICH" = "ON" ] ; then
                ENABLE_RESY=
              else
                ENABLE_RESY=#
              fi
            fi;;
    esac
  done
}

unix_menu()
{
  while [ 1 ] ; do
    if [ "$UNIXNEWUSER" = "1" ] ; then
      UNIXDEF="Yes"
    else
      UNIXDEF="No"
    fi
    if [ "$NEWUSER" = "1" ] ; then
      dialog --title "Global settings" \
             --backtitle "Select..." \
             --menu "Select:" 14 50 7 \
             USER "Remoteuser: $REMOTEUSER" \
             CREATE "Create new-user: $UNIXDEF" \
             UID "Lowest user-ID: $UNIXFIRSTUID" \
             HID "Highest user-ID: $UNIXLASTUID" \
             GID "Group-ID: $UNIXGID" \
             MENU "Back to mainmenu" \
             HELP "A little help" \
             2>/tmp/$$
    else
      dialog --title "Global settings" \
	     --backtitle "Select..." \
	     --menu "Select:" 10 50 3 \
	     USER "Remoteuser: $REMOTEUSER" \
	     MENU "Back to mainmenu" \
	     HELP "A little help" \
	     2>/tmp/$$
    fi
    if [ ! $? = 0 ] ; then
      return
    fi
    read WHICH < /tmp/$$
    case "$WHICH" in
      HELP) dialog --textbox ${tnt_doc_dir}/Readme5.en 24 80;;
      MENU) return;;
      USER) dialog --inputbox "Unix-user for runprograms (carefully with \"root\")" 8 60 2>/tmp/$$
            if [ $? = 0 ] ; then
              read REMOTEUSER < /tmp/$$
            fi;;
      CREATE) dialog --menu "Create new-users?" 9 45 2 \
                     YES "create new UID" \
                     NO "use remoteuser" 2>/tmp/$$
              if [ $? = 0 ] ; then
                read WHICH < /tmp/$$
                if [ "$WHICH" = "YES" ] ; then
                  UNIXNEWUSER=1
                else
                  UNIXNEWUSER=0
                fi
              fi;;
      UID) dialog --inputbox "Lowest user-ID" 8 40 2>/tmp/$$
           if [ $? = 0 ] ; then
             read UNIXFIRSTUID < /tmp/$$
           fi;;
      HID) dialog --inputbox "Highest user-ID" 8 40 2>/tmp/$$
	   if [ $? = 0 ] ; then
	     read UNIXLASTUID < /tmp/$$
	   fi;;
      GID) dialog --inputbox "Group-ID" 8 40 2>/tmp/$$
           if [ $? = 0 ] ; then
             read UNIXGID < /tmp/$$
           fi;;
    esac
  done
}

write_ini()
{
  EAX25="# "
  if [ "$CWAX25" = "1" ] ; then
    EAX25=""
  fi
  EAGNU="# "
  if [ "$NEWUSER" = "1" ] ; then
    EAGNU=""
  fi
  echo "\
#defines if select() shall be used, normally 1, put to 0, if you are
# using old kernels (select() produces there a higher CPU-load).
use_select 1

# --------------------------------------------------------------------------

# 0 for real TNC at serial port, 1 for TFKISS on a UNIX-socket,
# 2 for TFKISS on other socket
soft_tnc $SOFTTNC

# serial port to which TNC is connected, UNIX-socket of TFKISS or
# other socket for TFKISS
device $DEVICE

# lockfile for serial port or TFKISS
tnt_lockfile $LOCKFILE

# baudrate used, only used if TNC at serial port
speed $BAUD

# timinig parameters for interface to tfkiss (soft_tnc is 1)
# 1: fixed wait (10ms) after each hostmode-packet sent to tfkiss
fixed_wait 1
# if fixed_wait == 0, number of sent characters to tfkiss after which
# tnt will wait 10ms
amount_wait 20

# --------------------------------------------------------------------------

# number of channels of TNC
tnc_channels $TNCCHAN

# first channel with reduced backscroll buffer
r_channels $TNCREDBUF

# --------------------------------------------------------------------------

# enable static huffman compression (//COMP)
tnt_comp 1

# try to uncompress frames in the monitor window
moni_decomp 1

# disable binary packets
moni_chkbin 1

# packet length for transmission of files
file_paclen 255

# set to 1 to disconnect all channels on startup
disc_on_start 0

# --------------------------------------------------------------------------

# UNIX-user for remote permissions
remote_user $REMOTEUSER

### Only available if compiled with GEN_NEW_USER support!
# If set to 1, new users will be created, if set to 0, all new users will
# be logged in as user defined by 'remote_user'.
$EAGNU unix_new_user $UNIXNEWUSER

# lowest user-id for creation of new users
$EAGNU unix_first_uid $UNIXFIRSTUID

# highest user-id for creation of new users
$EAGNU unix_user_max $UNIXLASTUID

# group-id for new users
$EAGNU unix_user_gid $UNIXGID
###

# --------------------------------------------------------------------------

# timeout packet assembly (in seconds) for SHELL/REDIR and interface
pty_timeout 2

# --------------------------------------------------------------------------

# set to 1 for request of R:-headers in boxlist read command
blist_add_plus 0

# --------------------------------------------------------------------------

# SSID of DPBox (A channel with this SSID must exist in TNC!)
#tnt_box_ssid 7

# Call and SSID of DPBox (A channel with this Call and SSID
# must exist in TNC!)
# (If this parameter is used, 'tnt_box_ssid' will be ignored)
tnt_box_call $BOXCALL

# SSID of a node connect (not yet ready)
#tnt_node_ssid 9

# Call and SSID of a node connect (not yet ready)
#tnt_node_call

# --------------------------------------------------------------------------

# work/spool directory
tnt_work_dir @tnt_work_dir@
# configuration directory
tnt_conf_dir @tnt_conf_dir@
# doc dir directory
tnt_doc_dir @tnt_doc_dir@
# log file directory
tnt_log_dir @tnt_log_dir@
# pid/socket directory
tnt_proc_dir @tnt_proc_dir@
# remote directory
remote_dir remote/
# ctext directory
ctext_dir ctext/
# directory for corrupt autobin-files
abin_dir abin/
# directory for uploads
upload_dir up/
# directory for downloads
download_dir down/
# directory for 7plus
tnt_7plus_dir 7plus/
# directory for YAPP
yapp_dir yapp/
# directory for executable programs
tnt_bin_dir @tnt_bin_dir@
# home-dir for new users (only if compiled with GEN_NEW_USER support)
$EAGNU unix_user_dir tntusers/
# dir for macro-texts
macrotext_dir macro/
# dir for box-broadcastfiles
tnt_bcnewmaildir bcast/newmail/
# dir for broadcastfiles
tnt_bcsavedir bcast/save/
# dir for temporary broadcastfiles
tnt_bctempdir /tmp/
# dir for tnt soundfiles (only if compiled with TNT_SOUND!)
" > ${tnt_conf_dir}/tnt.ini

if [ $SOUNDON = 1 ]; then
  echo "\
tnt_sound_dir @tnt_sound_dir@
" >> ${tnt_conf_dir}/tnt.ini
else
  echo "\
#tnt_sound_dir @tnt_sound_dir@
" >> ${tnt_conf_dir}/tnt.ini
fi

  echo "\
# upfile
tnt_upfile tnt.up
# downfile
tnt_downfile tnt.dwn
# file containing process id
proc_file tnt.pid
# remote infofile
rem_info_file tntrem.inf
# remote helpfile
rem_help_file tntrem.hlp.en
# tnthelpfile
tnt_help_file tnt.hlp.en
# cookiefile
tnt_cookiefile $COOKIE
# namesfile
name_file_name names.tnt
# routesfile
route_file_name routes.tnt
# newsfile
news_file_name news.tnt
# connect text
tnt_ctextfile ctext.tnt
# quit text
tnt_qtextfile qtext.tnt
# logbook file
tnt_logbookfile tnt.log
# password file
tnt_pwfile pw.tnt
# sysop access files
tnt_sysfile sys.tnt
# calls with remote disabled
tnt_noremfile norem.tnt
# calls which do flexnet-linkquality-check
tnt_flchkfile flchk.tnt
# own call/SSID not allowed for xconnect
tnt_notownfile notown.tnt
# resync logfile
$ENABLE_RESY resy_log_file resy.log
# broadcast logfile
bcast_log_file bcast.log
# socket passwordfile
sock_passfile netpass.tnt
# file for keyboard macros
func_key_file fkeys.tnt
# file for extended remote commands
tnt_extremotefile extrem.tnt
# file for autostart on connect
tnt_autostartfile autostrt.tnt
# file for telltexts
tnt_tellfile telltexte.tnt
# Logfile for saving tnt-session status
tnt_sessionlog /var/log/tntsession_status
# file for sound effects (only if compiled with TNT_SOUND!)
" >> ${tnt_conf_dir}/tnt.ini

if [ $SOUNDON = 1 ]; then
  echo "\
tnt_soundfile sounds.tnt
" >> ${tnt_conf_dir}/tnt.ini
else
  echo "\
#tnt_soundfile sounds.tnt
" >> ${tnt_conf_dir}/tnt.ini
fi

  echo "\
# socket for digipoint box
# use "0", if you don't want to use dpbox
box_socket $BOXFRONT
# directory for newmail
newmaildir newmail/
# file holding monitored folders
autobox_dir autobox.dir
# file for boxfile endings
tnt_boxender boxender.tnt
# file for f6fbb-definitions
f6fbb_box f6fbb.box

# socket for tntnode (not yet ready)
#node_socket /usr/local/tntnode/socket

# socket for frontend
frontend_socket $FRONTEND

# --------------------------------------------------------------------------

# maximum length of input line
input_linelen 80

# set to 1 if insertmode shall be active after startup
insertmode 1

# maximum number of entries in heardlist
num_heardentries $HEARTENTRY

# number of lines for backscroll

# command-screen
lines_command 30
# monitor-screen
lines_monitor $LINES_MONITOR

# input area of connect-screens
lines_input $LINES_INPUT
# output area of connect-screens
lines_output $LINES_OUTPUT
# input area of connect-screens (reduced backscroll)
lines_r_input $LINES_R_INPUT
# output area of connect-screens (reduced backscroll)
lines_r_output $LINES_R_OUTPUT
# input/output-lines ratio on real screen (connect)
scr_divide 5
# monitor lines on connect-screens
lines_moncon $MON_LINES

# input area of mailbox-screen
lines_mbinput 10
# output area of mailbox-screen
lines_mboutput $LINES_BOXOUT
# input/output-lines ratio on real screen (mailbox)
mbscr_divide 8

# input area of extended monitor screens
lines_xmon_pre 10
# output area of extended monitor screens
lines_xmon 250
# input/output-lines ratio on real screen (extended monitor)
xmon_scr_divide 5

# --------------------------------------------------------------------------

# 0: monochrom, 1: use color attributes if TERM = 'linux' or 'conXXX',
# otherwise use monochrom attributes and termcap, 2: use color attributes,
# 3: use color attributes and termcap if TERM = 'xterm'
color $COLOR

# 0: don't use termcap, 1: use termcap
termcap 1
# 1: alternative channel status line
altstat $ALTSTAT

# --------------------------------------------------------------------------

# attributes for color

# normal characters
attc_normal 0x47
# characters in bottom statusline
attc_statline 0x3A
# characters in monitor-headers
attc_monitor 0x4A
# characters in channel statusline
attc_cstatline 0x74
# control-characters
attc_controlchar 0x07
# remote-answers
attc_remote 0x4F
# special features
attc_special 0x0F
# color for port 1
attc_monport1 0x4B
# color for port 2
attc_monport2 0x43

# --------------------------------------------------------------------------

# attributes for monochrom

# normal characters
attm_normal 0x00
# characters in bottom statusline
attm_statline 0x10
# characters in monitor-headers
attm_monitor 0x10
# characters in channel statusline
attm_cstatline 0x10
# control-characters
attm_controlchar 0x10
# remote-answers and own transmitted text
attm_remote 0x10
# special features
attm_special 0x10
# color for port 1
attm_monport1 0x10
# color for port 2
attm_monport2 0x08

# --------------------------------------------------------------------------

# these values must remain unchanged using LINUX

# 1: terminal puts cursor to a new line after character in last column
auto_newline 0

# 1: don't display characters 128-160
supp_hicntl 0

# --------------------------------------------------------------------------

# AX25 Port (only if compiled with USE_AX25K)
$EAX25 ax25k_port $AX25PO

# Fullmoniflag (0: display only received frames, 1: display all frames)
# NOTE: a value of '1' means that TNT have to analysis all frames of the
#       network which will cause a high load if you are using a busy ethernet
$EAX25 fullmoni_flag $AX25FM
" >> ${tnt_conf_dir}/tnt.ini
}

write_up()
{
  echo "\
# connect-text
ctext 0 <text> (0=Off, 1=On, 2=allow //Q for TNC in terminalmode)
# monitor
m uisc
# number of connects
y $TNCCHAN

my $TERMCALL
i $TERMCALL

# bell for received packets
infobell on
# umlaut off
umlaut off
# logfile append
append on
wordwrap on
wholelin on
# timestamp
k 2

# set time and date in tnc
timeset
dateset

#defaults:
s 0
tx 30                   # TX-Delay
@t3 14000
ret 15
actb                    # activate mailbox
qrg 0 link              # QRG for first channel
tnc o 4                 # Maxframes
f 400                   # Fracktime
p 32                    # Persistance
@t2 150
w 10
r 1
x 1                     # XMITOK on
tnc n 20
tnc @i 100
tnc @d 0
remote on               # enable remotecommands
cont on                 # Ctext on
setacc echo normal      # allow remotecommand "//echo"
autoya on               # allow auto YAPP-protokoll
auto7pl on              # allow auto 7plus-receive
monl $MON_LINES         # number of lines on connectscreen
cookie on               # allow cookies
snobox Mailbox not accessable
snoacc Command disabled

s 0
my $TERMCALL
s 9
my $BOXCALL
s 10
my $BOXCALL

# Created by tntsetup (WSPse)
" > ${tnt_conf_dir}/tnt.up
}

write_smpl()
{
  echo "\
ctext 2 Terminal of $TERMCALL off. Leave msg and //Q
m n
y 1
" > ${tnt_conf_dir}/tnt.dwn

  echo "\
# Config for TNTC, created by tntsetup (WSPse)
# Maindirectory
tntc_dir ${tnt_proc_dir}
# socket for frontend
frontend_socket $FRONTEND
" > ${tnt_conf_dir}/tntc.ini

  echo "\
# Sample for TNT-Telltextfile (since TNT1.1a7)
# Commands ":DA", ":WEG", ":600", ":KLO" and ":GND" allow output of
# texts on all channels and the change of the text for %m-macro in ctext
#
# If text is "0", no action will taken
#
# If second text is "1", macro will be cleared (=deleted).
#
# EG: "1 Im back" - outputs this text on all channels if ":DA" is typed
#     "2 0" - ... but %m-macro will not be changed.
#     "2 1" - ... and %m-macro will be deleted.
#
# 1+2 for DA, 3+4 for WEG, 5+6 for 600, 7+8 for KLO, 9+10 for GND
# first text will be outputed on all channels and second text will be used
# for %m-macro
#
# These are the macros which can be used in the first textline:
# %n - name of remotestation, %c - callsign of remotestation, %k - channel on
# which remotestation is connect, %t - actual time, %g or %b - bell (CTRL-G)
#
# Messages for DA
1 I'm back!
2 I'm happy to be connected with you
#
# Messages for WEG
3 I'm away [%t].
4 I'm not available at the moment. leave a msg in $BOXCALL
#
# Messages for 600
5 Please wait, I've 600
6 Sysop is on telephone.
#
# Messages for KLO
7 I've got to go to the loo...
8 0
#
# Messages for GND
9 %n, I'm away for a moment
10 Sysops works on background
#
#
# (C) WSPse 1998
" > ${tnt_conf_dir}/telltexte.tnt
}

create_tnt()
{
  dialog --title "Read carefully!" \
         --backtitle "Select..." \
         --yesno "           SURE?\nIf there already exists file in \"${tnt_conf_dir}\", you\nmaybe lose some datas here.\nThese step will rewrite some initialisationfiles of TNT.\nExisting configuration will be lost!\n\nSelect YES only if you are totally sure (or have copies)!" 11 78
  if [ ! $? = 0 ] ; then
    return
  fi

  dialog --title "Creation" \
         --backtitle "Wait..." \
         --infobox "Create initfiles" 3 40

  write_ini             # Mainini-File (tnt.ini)
  write_up              # TNC-inifile
  write_smpl            # Samplefiles

  dialog --title "Installation completed" \
         --backtitle "WSPse 1998/99 - wsp@gmx.de" \
         --msgbox "Installation is finished\n\nIf you have questions, mail to:\nwsp@gmx.de - Matthias Hensler\n\nHave fun with TNT\nWSPse 1998/99" 13 60

  exit 0
}

# ---MAIN-----------------------------------------------------------------

dialog --title "TNT-SETUP" \
       --backtitle "(C) WSPse 1998/99 - Created by Matthias Hensler - eMail: wsp@gmx.de" \
       --msgbox "        TNT-Setup V1\n\nInstallationprogram for\nPacket terminal TNT under Linux.\nTNT created by Mark Wahl\nand Matthias Hensler\n\nTNT-Setup created\nby Matthias Hensler" 13 35

# ---Mainmenu---

  while [ 1 ] ; do
    if [ "$CWAX25" = "1" ] ; then
      dialog --title "Mainmenu" \
             --backtitle "Select" \
             --menu "Select:" 16 70 9 \
             GLOBAL "Global settings (paths, etc)" \
             TNC "TNC-settings" \
             AX25 "AX25-settings" \
             BACKSCROLL "Backscrollbuffer" \
             TERM "Terminal-settings" \
             UNIX "Unix user settings" \
             DOC "Show documentation" \
             INSTALL "Save configuration" \
             EXIT "Leave program" \
             2>/tmp/$$
    else
      dialog --title "Mainmenu" \
             --backtitle "Select" \
             --menu "Select" 15 70 8 \
             GLOBAL "Global settings (paths, etc)" \
             TNC "TNC-settings" \
             BACKSCROLL "Backscrollbuffer" \
             TERM "Terminal-settings" \
             UNIX "Unix user settings" \
             DOC "Show documentation" \
             INSTALL "Save configuration" \
             EXIT "Leave program" \
             2>/tmp/$$
    fi
    if [ ! $? = 0 ] ; then
      exit
    fi

    read WHICH < /tmp/$$
    case "$WHICH" in
      EXIT) exit;;
      DOC) show_docs;;
      INSTALL) create_tnt;;
      GLOBAL) global_menu;;
      BACKSCROLL) scroll_menu;;
      TNC) tnc_menu;;
      TERM) term_menu;;
      UNIX) unix_menu;;
      AX25) sel_ax25;;
    esac
  done

